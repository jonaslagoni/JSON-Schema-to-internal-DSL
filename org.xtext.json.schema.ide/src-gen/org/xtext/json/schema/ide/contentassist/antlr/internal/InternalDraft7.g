/*
 * generated by Xtext 2.20.0
 */
grammar InternalDraft7;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package org.xtext.json.schema.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.xtext.json.schema.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import org.xtext.json.schema.services.Draft7GrammarAccess;

}
@parser::members {
	private Draft7GrammarAccess grammarAccess;

	public void setGrammarAccess(Draft7GrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleModel
entryRuleModel
:
{ before(grammarAccess.getModelRule()); }
	 ruleModel
{ after(grammarAccess.getModelRule()); } 
	 EOF 
;

// Rule Model
ruleModel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getModelAccess().getGroup()); }
		(rule__Model__Group__0)
		{ after(grammarAccess.getModelAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleJsonSchemaRoot
entryRuleJsonSchemaRoot
:
{ before(grammarAccess.getJsonSchemaRootRule()); }
	 ruleJsonSchemaRoot
{ after(grammarAccess.getJsonSchemaRootRule()); } 
	 EOF 
;

// Rule JsonSchemaRoot
ruleJsonSchemaRoot 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getJsonSchemaRootAccess().getAlternatives()); }
		(rule__JsonSchemaRoot__Alternatives)
		{ after(grammarAccess.getJsonSchemaRootAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNumberProperties
entryRuleNumberProperties
:
{ before(grammarAccess.getNumberPropertiesRule()); }
	 ruleNumberProperties
{ after(grammarAccess.getNumberPropertiesRule()); } 
	 EOF 
;

// Rule NumberProperties
ruleNumberProperties 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNumberPropertiesAccess().getAlternatives()); }
		(rule__NumberProperties__Alternatives)
		{ after(grammarAccess.getNumberPropertiesAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleType
entryRuleType
:
{ before(grammarAccess.getTypeRule()); }
	 ruleType
{ after(grammarAccess.getTypeRule()); } 
	 EOF 
;

// Rule Type
ruleType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypeAccess().getGroup()); }
		(rule__Type__Group__0)
		{ after(grammarAccess.getTypeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleJsonTypes
entryRuleJsonTypes
:
{ before(grammarAccess.getJsonTypesRule()); }
	 ruleJsonTypes
{ after(grammarAccess.getJsonTypesRule()); } 
	 EOF 
;

// Rule JsonTypes
ruleJsonTypes 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getJsonTypesAccess().getAlternatives()); }
		(rule__JsonTypes__Alternatives)
		{ after(grammarAccess.getJsonTypesAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleObjectProperties
entryRuleObjectProperties
:
{ before(grammarAccess.getObjectPropertiesRule()); }
	 ruleObjectProperties
{ after(grammarAccess.getObjectPropertiesRule()); } 
	 EOF 
;

// Rule ObjectProperties
ruleObjectProperties 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getObjectPropertiesAccess().getAlternatives()); }
		(rule__ObjectProperties__Alternatives)
		{ after(grammarAccess.getObjectPropertiesAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRequiredProperties
entryRuleRequiredProperties
:
{ before(grammarAccess.getRequiredPropertiesRule()); }
	 ruleRequiredProperties
{ after(grammarAccess.getRequiredPropertiesRule()); } 
	 EOF 
;

// Rule RequiredProperties
ruleRequiredProperties 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRequiredPropertiesAccess().getGroup()); }
		(rule__RequiredProperties__Group__0)
		{ after(grammarAccess.getRequiredPropertiesAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRequiredPropertiesName
entryRuleRequiredPropertiesName
:
{ before(grammarAccess.getRequiredPropertiesNameRule()); }
	 ruleRequiredPropertiesName
{ after(grammarAccess.getRequiredPropertiesNameRule()); } 
	 EOF 
;

// Rule RequiredPropertiesName
ruleRequiredPropertiesName 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRequiredPropertiesNameAccess().getNameAssignment()); }
		(rule__RequiredPropertiesName__NameAssignment)
		{ after(grammarAccess.getRequiredPropertiesNameAccess().getNameAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleProperties
entryRuleProperties
:
{ before(grammarAccess.getPropertiesRule()); }
	 ruleProperties
{ after(grammarAccess.getPropertiesRule()); } 
	 EOF 
;

// Rule Properties
ruleProperties 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPropertiesAccess().getGroup()); }
		(rule__Properties__Group__0)
		{ after(grammarAccess.getPropertiesAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleProperty
entryRuleProperty
:
{ before(grammarAccess.getPropertyRule()); }
	 ruleProperty
{ after(grammarAccess.getPropertyRule()); } 
	 EOF 
;

// Rule Property
ruleProperty 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPropertyAccess().getGroup()); }
		(rule__Property__Group__0)
		{ after(grammarAccess.getPropertyAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStringProperties
entryRuleStringProperties
:
{ before(grammarAccess.getStringPropertiesRule()); }
	 ruleStringProperties
{ after(grammarAccess.getStringPropertiesRule()); } 
	 EOF 
;

// Rule StringProperties
ruleStringProperties 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStringPropertiesAccess().getAlternatives()); }
		(rule__StringProperties__Alternatives)
		{ after(grammarAccess.getStringPropertiesAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLength
entryRuleLength
:
{ before(grammarAccess.getLengthRule()); }
	 ruleLength
{ after(grammarAccess.getLengthRule()); } 
	 EOF 
;

// Rule Length
ruleLength 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLengthAccess().getGroup()); }
		(rule__Length__Group__0)
		{ after(grammarAccess.getLengthAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePattern
entryRulePattern
:
{ before(grammarAccess.getPatternRule()); }
	 rulePattern
{ after(grammarAccess.getPatternRule()); } 
	 EOF 
;

// Rule Pattern
rulePattern 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPatternAccess().getGroup()); }
		(rule__Pattern__Group__0)
		{ after(grammarAccess.getPatternAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMultiples
entryRuleMultiples
:
{ before(grammarAccess.getMultiplesRule()); }
	 ruleMultiples
{ after(grammarAccess.getMultiplesRule()); } 
	 EOF 
;

// Rule Multiples
ruleMultiples 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMultiplesAccess().getGroup()); }
		(rule__Multiples__Group__0)
		{ after(grammarAccess.getMultiplesAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMinimum
entryRuleMinimum
:
{ before(grammarAccess.getMinimumRule()); }
	 ruleMinimum
{ after(grammarAccess.getMinimumRule()); } 
	 EOF 
;

// Rule Minimum
ruleMinimum 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMinimumAccess().getGroup()); }
		(rule__Minimum__Group__0)
		{ after(grammarAccess.getMinimumAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExclusiveMinimum
entryRuleExclusiveMinimum
:
{ before(grammarAccess.getExclusiveMinimumRule()); }
	 ruleExclusiveMinimum
{ after(grammarAccess.getExclusiveMinimumRule()); } 
	 EOF 
;

// Rule ExclusiveMinimum
ruleExclusiveMinimum 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExclusiveMinimumAccess().getGroup()); }
		(rule__ExclusiveMinimum__Group__0)
		{ after(grammarAccess.getExclusiveMinimumAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMaximum
entryRuleMaximum
:
{ before(grammarAccess.getMaximumRule()); }
	 ruleMaximum
{ after(grammarAccess.getMaximumRule()); } 
	 EOF 
;

// Rule Maximum
ruleMaximum 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMaximumAccess().getGroup()); }
		(rule__Maximum__Group__0)
		{ after(grammarAccess.getMaximumAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExclusiveMaximum
entryRuleExclusiveMaximum
:
{ before(grammarAccess.getExclusiveMaximumRule()); }
	 ruleExclusiveMaximum
{ after(grammarAccess.getExclusiveMaximumRule()); } 
	 EOF 
;

// Rule ExclusiveMaximum
ruleExclusiveMaximum 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExclusiveMaximumAccess().getGroup()); }
		(rule__ExclusiveMaximum__Group__0)
		{ after(grammarAccess.getExclusiveMaximumAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__JsonSchemaRoot__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getJsonSchemaRootAccess().getTypeAssignment_0()); }
		(rule__JsonSchemaRoot__TypeAssignment_0)
		{ after(grammarAccess.getJsonSchemaRootAccess().getTypeAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getJsonSchemaRootAccess().getObjectPropertiesParserRuleCall_1()); }
		ruleObjectProperties
		{ after(grammarAccess.getJsonSchemaRootAccess().getObjectPropertiesParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getJsonSchemaRootAccess().getStringPropertiesParserRuleCall_2()); }
		ruleStringProperties
		{ after(grammarAccess.getJsonSchemaRootAccess().getStringPropertiesParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getJsonSchemaRootAccess().getNumberPropertiesParserRuleCall_3()); }
		ruleNumberProperties
		{ after(grammarAccess.getJsonSchemaRootAccess().getNumberPropertiesParserRuleCall_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NumberProperties__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNumberPropertiesAccess().getMultiplesParserRuleCall_0()); }
		ruleMultiples
		{ after(grammarAccess.getNumberPropertiesAccess().getMultiplesParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getNumberPropertiesAccess().getMinimumAssignment_1()); }
		(rule__NumberProperties__MinimumAssignment_1)
		{ after(grammarAccess.getNumberPropertiesAccess().getMinimumAssignment_1()); }
	)
	|
	(
		{ before(grammarAccess.getNumberPropertiesAccess().getExclusiveMinimumAssignment_2()); }
		(rule__NumberProperties__ExclusiveMinimumAssignment_2)
		{ after(grammarAccess.getNumberPropertiesAccess().getExclusiveMinimumAssignment_2()); }
	)
	|
	(
		{ before(grammarAccess.getNumberPropertiesAccess().getMaximumAssignment_3()); }
		(rule__NumberProperties__MaximumAssignment_3)
		{ after(grammarAccess.getNumberPropertiesAccess().getMaximumAssignment_3()); }
	)
	|
	(
		{ before(grammarAccess.getNumberPropertiesAccess().getExclusiveMaximumAssignment_4()); }
		(rule__NumberProperties__ExclusiveMaximumAssignment_4)
		{ after(grammarAccess.getNumberPropertiesAccess().getExclusiveMaximumAssignment_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Alternatives_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeAccess().getGroup_2_0()); }
		(rule__Type__Group_2_0__0)
		{ after(grammarAccess.getTypeAccess().getGroup_2_0()); }
	)
	|
	(
		{ before(grammarAccess.getTypeAccess().getTypeAssignment_2_1()); }
		(rule__Type__TypeAssignment_2_1)
		{ after(grammarAccess.getTypeAccess().getTypeAssignment_2_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__JsonTypes__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getJsonTypesAccess().getStringKeyword_0()); }
		'"string"'
		{ after(grammarAccess.getJsonTypesAccess().getStringKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getJsonTypesAccess().getIntegerKeyword_1()); }
		'"integer"'
		{ after(grammarAccess.getJsonTypesAccess().getIntegerKeyword_1()); }
	)
	|
	(
		{ before(grammarAccess.getJsonTypesAccess().getNumberKeyword_2()); }
		'"number"'
		{ after(grammarAccess.getJsonTypesAccess().getNumberKeyword_2()); }
	)
	|
	(
		{ before(grammarAccess.getJsonTypesAccess().getObjectKeyword_3()); }
		'"object"'
		{ after(grammarAccess.getJsonTypesAccess().getObjectKeyword_3()); }
	)
	|
	(
		{ before(grammarAccess.getJsonTypesAccess().getArrayKeyword_4()); }
		'"array"'
		{ after(grammarAccess.getJsonTypesAccess().getArrayKeyword_4()); }
	)
	|
	(
		{ before(grammarAccess.getJsonTypesAccess().getBooleanKeyword_5()); }
		'"boolean"'
		{ after(grammarAccess.getJsonTypesAccess().getBooleanKeyword_5()); }
	)
	|
	(
		{ before(grammarAccess.getJsonTypesAccess().getNullKeyword_6()); }
		'"null"'
		{ after(grammarAccess.getJsonTypesAccess().getNullKeyword_6()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectProperties__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getObjectPropertiesAccess().getPropertiesAssignment_0()); }
		(rule__ObjectProperties__PropertiesAssignment_0)
		{ after(grammarAccess.getObjectPropertiesAccess().getPropertiesAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getObjectPropertiesAccess().getRequiredPropertiesAssignment_1()); }
		(rule__ObjectProperties__RequiredPropertiesAssignment_1)
		{ after(grammarAccess.getObjectPropertiesAccess().getRequiredPropertiesAssignment_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StringProperties__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStringPropertiesAccess().getLengthAssignment_0()); }
		(rule__StringProperties__LengthAssignment_0)
		{ after(grammarAccess.getStringPropertiesAccess().getLengthAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getStringPropertiesAccess().getPatternAssignment_1()); }
		(rule__StringProperties__PatternAssignment_1)
		{ after(grammarAccess.getStringPropertiesAccess().getPatternAssignment_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__0__Impl
	rule__Model__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getModelAction_0()); }
	()
	{ after(grammarAccess.getModelAccess().getModelAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__1__Impl
	rule__Model__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getModelAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__2__Impl
	rule__Model__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getGroup_2()); }
	(rule__Model__Group_2__0)*
	{ after(grammarAccess.getModelAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getRightCurlyBracketKeyword_3()); }
	'}'
	{ after(grammarAccess.getModelAccess().getRightCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Model__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group_2__0__Impl
	rule__Model__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getRootAssignment_2_0()); }
	(rule__Model__RootAssignment_2_0)
	{ after(grammarAccess.getModelAccess().getRootAssignment_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getCommaKeyword_2_1()); }
	(',')?
	{ after(grammarAccess.getModelAccess().getCommaKeyword_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Type__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Type__Group__0__Impl
	rule__Type__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeAccess().getTypeKeyword_0()); }
	'"type"'
	{ after(grammarAccess.getTypeAccess().getTypeKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Type__Group__1__Impl
	rule__Type__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeAccess().getColonKeyword_1()); }
	':'
	{ after(grammarAccess.getTypeAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Type__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeAccess().getAlternatives_2()); }
	(rule__Type__Alternatives_2)
	{ after(grammarAccess.getTypeAccess().getAlternatives_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Type__Group_2_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Type__Group_2_0__0__Impl
	rule__Type__Group_2_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_2_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeAccess().getLeftSquareBracketKeyword_2_0_0()); }
	'['
	{ after(grammarAccess.getTypeAccess().getLeftSquareBracketKeyword_2_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_2_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Type__Group_2_0__1__Impl
	rule__Type__Group_2_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_2_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeAccess().getGroup_2_0_1()); }
	(rule__Type__Group_2_0_1__0)
	{ after(grammarAccess.getTypeAccess().getGroup_2_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_2_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Type__Group_2_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_2_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeAccess().getRightSquareBracketKeyword_2_0_2()); }
	']'
	{ after(grammarAccess.getTypeAccess().getRightSquareBracketKeyword_2_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Type__Group_2_0_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Type__Group_2_0_1__0__Impl
	rule__Type__Group_2_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_2_0_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeAccess().getTypesAssignment_2_0_1_0()); }
	(rule__Type__TypesAssignment_2_0_1_0)
	{ after(grammarAccess.getTypeAccess().getTypesAssignment_2_0_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_2_0_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Type__Group_2_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_2_0_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeAccess().getGroup_2_0_1_1()); }
	(rule__Type__Group_2_0_1_1__0)*
	{ after(grammarAccess.getTypeAccess().getGroup_2_0_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Type__Group_2_0_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Type__Group_2_0_1_1__0__Impl
	rule__Type__Group_2_0_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_2_0_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeAccess().getCommaKeyword_2_0_1_1_0()); }
	','
	{ after(grammarAccess.getTypeAccess().getCommaKeyword_2_0_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_2_0_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Type__Group_2_0_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_2_0_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeAccess().getTypesAssignment_2_0_1_1_1()); }
	(rule__Type__TypesAssignment_2_0_1_1_1)
	{ after(grammarAccess.getTypeAccess().getTypesAssignment_2_0_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RequiredProperties__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RequiredProperties__Group__0__Impl
	rule__RequiredProperties__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RequiredProperties__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRequiredPropertiesAccess().getRequiredKeyword_0()); }
	'"required"'
	{ after(grammarAccess.getRequiredPropertiesAccess().getRequiredKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RequiredProperties__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RequiredProperties__Group__1__Impl
	rule__RequiredProperties__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RequiredProperties__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRequiredPropertiesAccess().getColonKeyword_1()); }
	':'
	{ after(grammarAccess.getRequiredPropertiesAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RequiredProperties__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RequiredProperties__Group__2__Impl
	rule__RequiredProperties__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RequiredProperties__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRequiredPropertiesAccess().getLeftSquareBracketKeyword_2()); }
	'['
	{ after(grammarAccess.getRequiredPropertiesAccess().getLeftSquareBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RequiredProperties__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RequiredProperties__Group__3__Impl
	rule__RequiredProperties__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__RequiredProperties__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRequiredPropertiesAccess().getRequiredPropertiesAssignment_3()); }
	(rule__RequiredProperties__RequiredPropertiesAssignment_3)
	{ after(grammarAccess.getRequiredPropertiesAccess().getRequiredPropertiesAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RequiredProperties__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RequiredProperties__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RequiredProperties__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRequiredPropertiesAccess().getRightSquareBracketKeyword_4()); }
	']'
	{ after(grammarAccess.getRequiredPropertiesAccess().getRightSquareBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Properties__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Properties__Group__0__Impl
	rule__Properties__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Properties__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPropertiesAccess().getPropertiesAction_0()); }
	()
	{ after(grammarAccess.getPropertiesAccess().getPropertiesAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Properties__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Properties__Group__1__Impl
	rule__Properties__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Properties__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPropertiesAccess().getPropertiesKeyword_1()); }
	'"properties"'
	{ after(grammarAccess.getPropertiesAccess().getPropertiesKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Properties__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Properties__Group__2__Impl
	rule__Properties__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Properties__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPropertiesAccess().getColonKeyword_2()); }
	':'
	{ after(grammarAccess.getPropertiesAccess().getColonKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Properties__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Properties__Group__3__Impl
	rule__Properties__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Properties__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPropertiesAccess().getLeftCurlyBracketKeyword_3()); }
	'{'
	{ after(grammarAccess.getPropertiesAccess().getLeftCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Properties__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Properties__Group__4__Impl
	rule__Properties__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Properties__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPropertiesAccess().getPropertiesAssignment_4()); }
	(rule__Properties__PropertiesAssignment_4)*
	{ after(grammarAccess.getPropertiesAccess().getPropertiesAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Properties__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Properties__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Properties__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPropertiesAccess().getRightCurlyBracketKeyword_5()); }
	'}'
	{ after(grammarAccess.getPropertiesAccess().getRightCurlyBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Property__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Property__Group__0__Impl
	rule__Property__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPropertyAccess().getPropertyAction_0()); }
	()
	{ after(grammarAccess.getPropertyAccess().getPropertyAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Property__Group__1__Impl
	rule__Property__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPropertyAccess().getNameAssignment_1()); }
	(rule__Property__NameAssignment_1)
	{ after(grammarAccess.getPropertyAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Property__Group__2__Impl
	rule__Property__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPropertyAccess().getColonKeyword_2()); }
	':'
	{ after(grammarAccess.getPropertyAccess().getColonKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Property__Group__3__Impl
	rule__Property__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPropertyAccess().getLeftCurlyBracketKeyword_3()); }
	'{'
	{ after(grammarAccess.getPropertyAccess().getLeftCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Property__Group__4__Impl
	rule__Property__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPropertyAccess().getPropertiesAssignment_4()); }
	(rule__Property__PropertiesAssignment_4)*
	{ after(grammarAccess.getPropertyAccess().getPropertiesAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Property__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPropertyAccess().getRightCurlyBracketKeyword_5()); }
	'}'
	{ after(grammarAccess.getPropertyAccess().getRightCurlyBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Length__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Length__Group__0__Impl
	rule__Length__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Length__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLengthAccess().getLengthKeyword_0()); }
	'"length"'
	{ after(grammarAccess.getLengthAccess().getLengthKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Length__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Length__Group__1__Impl
	rule__Length__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Length__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLengthAccess().getColonKeyword_1()); }
	':'
	{ after(grammarAccess.getLengthAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Length__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Length__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Length__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLengthAccess().getLengthAssignment_2()); }
	(rule__Length__LengthAssignment_2)
	{ after(grammarAccess.getLengthAccess().getLengthAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Pattern__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Pattern__Group__0__Impl
	rule__Pattern__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Pattern__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPatternAccess().getPatternKeyword_0()); }
	'"pattern"'
	{ after(grammarAccess.getPatternAccess().getPatternKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Pattern__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Pattern__Group__1__Impl
	rule__Pattern__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Pattern__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPatternAccess().getColonKeyword_1()); }
	':'
	{ after(grammarAccess.getPatternAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Pattern__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Pattern__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Pattern__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPatternAccess().getPatternAssignment_2()); }
	(rule__Pattern__PatternAssignment_2)
	{ after(grammarAccess.getPatternAccess().getPatternAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Multiples__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Multiples__Group__0__Impl
	rule__Multiples__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiples__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplesAccess().getMultiplesKeyword_0()); }
	'"multiples"'
	{ after(grammarAccess.getMultiplesAccess().getMultiplesKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiples__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Multiples__Group__1__Impl
	rule__Multiples__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiples__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplesAccess().getColonKeyword_1()); }
	':'
	{ after(grammarAccess.getMultiplesAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiples__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Multiples__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiples__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplesAccess().getMultipleOfAssignment_2()); }
	(rule__Multiples__MultipleOfAssignment_2)
	{ after(grammarAccess.getMultiplesAccess().getMultipleOfAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Minimum__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Minimum__Group__0__Impl
	rule__Minimum__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Minimum__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMinimumAccess().getMinimumKeyword_0()); }
	'"minimum"'
	{ after(grammarAccess.getMinimumAccess().getMinimumKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Minimum__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Minimum__Group__1__Impl
	rule__Minimum__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Minimum__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMinimumAccess().getColonKeyword_1()); }
	':'
	{ after(grammarAccess.getMinimumAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Minimum__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Minimum__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Minimum__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMinimumAccess().getMinimumAssignment_2()); }
	(rule__Minimum__MinimumAssignment_2)
	{ after(grammarAccess.getMinimumAccess().getMinimumAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExclusiveMinimum__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExclusiveMinimum__Group__0__Impl
	rule__ExclusiveMinimum__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExclusiveMinimum__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExclusiveMinimumAccess().getExclusiveMinimumKeyword_0()); }
	'"exclusiveMinimum"'
	{ after(grammarAccess.getExclusiveMinimumAccess().getExclusiveMinimumKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExclusiveMinimum__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExclusiveMinimum__Group__1__Impl
	rule__ExclusiveMinimum__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExclusiveMinimum__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExclusiveMinimumAccess().getColonKeyword_1()); }
	':'
	{ after(grammarAccess.getExclusiveMinimumAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExclusiveMinimum__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExclusiveMinimum__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExclusiveMinimum__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExclusiveMinimumAccess().getExclusiveMinimumAssignment_2()); }
	(rule__ExclusiveMinimum__ExclusiveMinimumAssignment_2)
	{ after(grammarAccess.getExclusiveMinimumAccess().getExclusiveMinimumAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Maximum__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Maximum__Group__0__Impl
	rule__Maximum__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Maximum__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMaximumAccess().getMaximumKeyword_0()); }
	'"maximum"'
	{ after(grammarAccess.getMaximumAccess().getMaximumKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Maximum__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Maximum__Group__1__Impl
	rule__Maximum__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Maximum__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMaximumAccess().getColonKeyword_1()); }
	':'
	{ after(grammarAccess.getMaximumAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Maximum__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Maximum__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Maximum__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMaximumAccess().getMaximumAssignment_2()); }
	(rule__Maximum__MaximumAssignment_2)
	{ after(grammarAccess.getMaximumAccess().getMaximumAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExclusiveMaximum__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExclusiveMaximum__Group__0__Impl
	rule__ExclusiveMaximum__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExclusiveMaximum__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExclusiveMaximumAccess().getExclusiveMaximumKeyword_0()); }
	'"exclusiveMaximum"'
	{ after(grammarAccess.getExclusiveMaximumAccess().getExclusiveMaximumKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExclusiveMaximum__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExclusiveMaximum__Group__1__Impl
	rule__ExclusiveMaximum__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExclusiveMaximum__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExclusiveMaximumAccess().getColonKeyword_1()); }
	':'
	{ after(grammarAccess.getExclusiveMaximumAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExclusiveMaximum__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExclusiveMaximum__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExclusiveMaximum__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExclusiveMaximumAccess().getExclusiveMaximumAssignment_2()); }
	(rule__ExclusiveMaximum__ExclusiveMaximumAssignment_2)
	{ after(grammarAccess.getExclusiveMaximumAccess().getExclusiveMaximumAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Model__RootAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getRootJsonSchemaRootParserRuleCall_2_0_0()); }
		ruleJsonSchemaRoot
		{ after(grammarAccess.getModelAccess().getRootJsonSchemaRootParserRuleCall_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__JsonSchemaRoot__TypeAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getJsonSchemaRootAccess().getTypeTypeParserRuleCall_0_0()); }
		ruleType
		{ after(grammarAccess.getJsonSchemaRootAccess().getTypeTypeParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NumberProperties__MinimumAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNumberPropertiesAccess().getMinimumMinimumParserRuleCall_1_0()); }
		ruleMinimum
		{ after(grammarAccess.getNumberPropertiesAccess().getMinimumMinimumParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NumberProperties__ExclusiveMinimumAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNumberPropertiesAccess().getExclusiveMinimumExclusiveMinimumParserRuleCall_2_0()); }
		ruleExclusiveMinimum
		{ after(grammarAccess.getNumberPropertiesAccess().getExclusiveMinimumExclusiveMinimumParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NumberProperties__MaximumAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNumberPropertiesAccess().getMaximumMaximumParserRuleCall_3_0()); }
		ruleMaximum
		{ after(grammarAccess.getNumberPropertiesAccess().getMaximumMaximumParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NumberProperties__ExclusiveMaximumAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNumberPropertiesAccess().getExclusiveMaximumExclusiveMaximumParserRuleCall_4_0()); }
		ruleExclusiveMaximum
		{ after(grammarAccess.getNumberPropertiesAccess().getExclusiveMaximumExclusiveMaximumParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__TypesAssignment_2_0_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeAccess().getTypesJsonTypesParserRuleCall_2_0_1_0_0()); }
		ruleJsonTypes
		{ after(grammarAccess.getTypeAccess().getTypesJsonTypesParserRuleCall_2_0_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__TypesAssignment_2_0_1_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeAccess().getTypesJsonTypesParserRuleCall_2_0_1_1_1_0()); }
		ruleJsonTypes
		{ after(grammarAccess.getTypeAccess().getTypesJsonTypesParserRuleCall_2_0_1_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__TypeAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeAccess().getTypeJsonTypesParserRuleCall_2_1_0()); }
		ruleJsonTypes
		{ after(grammarAccess.getTypeAccess().getTypeJsonTypesParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectProperties__PropertiesAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getObjectPropertiesAccess().getPropertiesPropertiesParserRuleCall_0_0()); }
		ruleProperties
		{ after(grammarAccess.getObjectPropertiesAccess().getPropertiesPropertiesParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectProperties__RequiredPropertiesAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getObjectPropertiesAccess().getRequiredPropertiesRequiredPropertiesParserRuleCall_1_0()); }
		ruleRequiredProperties
		{ after(grammarAccess.getObjectPropertiesAccess().getRequiredPropertiesRequiredPropertiesParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RequiredProperties__RequiredPropertiesAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRequiredPropertiesAccess().getRequiredPropertiesRequiredPropertiesNameParserRuleCall_3_0()); }
		ruleRequiredPropertiesName
		{ after(grammarAccess.getRequiredPropertiesAccess().getRequiredPropertiesRequiredPropertiesNameParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RequiredPropertiesName__NameAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRequiredPropertiesNameAccess().getNameJSON_IDTerminalRuleCall_0()); }
		RULE_JSON_ID
		{ after(grammarAccess.getRequiredPropertiesNameAccess().getNameJSON_IDTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Properties__PropertiesAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPropertiesAccess().getPropertiesPropertyParserRuleCall_4_0()); }
		ruleProperty
		{ after(grammarAccess.getPropertiesAccess().getPropertiesPropertyParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPropertyAccess().getNameJSON_IDTerminalRuleCall_1_0()); }
		RULE_JSON_ID
		{ after(grammarAccess.getPropertyAccess().getNameJSON_IDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__PropertiesAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPropertyAccess().getPropertiesJsonSchemaRootParserRuleCall_4_0()); }
		ruleJsonSchemaRoot
		{ after(grammarAccess.getPropertyAccess().getPropertiesJsonSchemaRootParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StringProperties__LengthAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStringPropertiesAccess().getLengthLengthParserRuleCall_0_0()); }
		ruleLength
		{ after(grammarAccess.getStringPropertiesAccess().getLengthLengthParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StringProperties__PatternAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStringPropertiesAccess().getPatternPatternParserRuleCall_1_0()); }
		rulePattern
		{ after(grammarAccess.getStringPropertiesAccess().getPatternPatternParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Length__LengthAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLengthAccess().getLengthINTTerminalRuleCall_2_0()); }
		RULE_INT
		{ after(grammarAccess.getLengthAccess().getLengthINTTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Pattern__PatternAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPatternAccess().getPatternJSON_STRINGTerminalRuleCall_2_0()); }
		RULE_JSON_STRING
		{ after(grammarAccess.getPatternAccess().getPatternJSON_STRINGTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiples__MultipleOfAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultiplesAccess().getMultipleOfINTTerminalRuleCall_2_0()); }
		RULE_INT
		{ after(grammarAccess.getMultiplesAccess().getMultipleOfINTTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Minimum__MinimumAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMinimumAccess().getMinimumINTTerminalRuleCall_2_0()); }
		RULE_INT
		{ after(grammarAccess.getMinimumAccess().getMinimumINTTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExclusiveMinimum__ExclusiveMinimumAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExclusiveMinimumAccess().getExclusiveMinimumINTTerminalRuleCall_2_0()); }
		RULE_INT
		{ after(grammarAccess.getExclusiveMinimumAccess().getExclusiveMinimumINTTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Maximum__MaximumAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMaximumAccess().getMaximumINTTerminalRuleCall_2_0()); }
		RULE_INT
		{ after(grammarAccess.getMaximumAccess().getMaximumINTTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExclusiveMaximum__ExclusiveMaximumAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExclusiveMaximumAccess().getExclusiveMaximumINTTerminalRuleCall_2_0()); }
		RULE_INT
		{ after(grammarAccess.getExclusiveMaximumAccess().getExclusiveMaximumINTTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_JSON_ID : '"' ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')* '"';

RULE_JSON_STRING : '"' ('['|']'|'('|')'|'{'|'}'|'/'|'\\'|'$'|'^'|'-'|'?'|'a'..'z'|'A'..'Z'|'0'..'9'|'.'|','|';'|':')* '"';

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
