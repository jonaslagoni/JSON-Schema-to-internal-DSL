/*
 * generated by Xtext 2.20.0
 */
grammar InternalDraft7;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package org.xtext.json.schema.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.xtext.json.schema.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import org.xtext.json.schema.services.Draft7GrammarAccess;

}
@parser::members {
	private Draft7GrammarAccess grammarAccess;

	public void setGrammarAccess(Draft7GrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleModel
entryRuleModel
:
{ before(grammarAccess.getModelRule()); }
	 ruleModel
{ after(grammarAccess.getModelRule()); } 
	 EOF 
;

// Rule Model
ruleModel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getModelAccess().getGroup()); }
		(rule__Model__Group__0)
		{ after(grammarAccess.getModelAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRoot
entryRuleRoot
:
{ before(grammarAccess.getRootRule()); }
	 ruleRoot
{ after(grammarAccess.getRootRule()); } 
	 EOF 
;

// Rule Root
ruleRoot 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRootAccess().getAlternatives()); }
		(rule__Root__Alternatives)
		{ after(grammarAccess.getRootAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleJSONProperties
entryRuleJSONProperties
:
{ before(grammarAccess.getJSONPropertiesRule()); }
	 ruleJSONProperties
{ after(grammarAccess.getJSONPropertiesRule()); } 
	 EOF 
;

// Rule JSONProperties
ruleJSONProperties 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getJSONPropertiesAccess().getGroup()); }
		(rule__JSONProperties__Group__0)
		{ after(grammarAccess.getJSONPropertiesAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleJSONProperty
entryRuleJSONProperty
:
{ before(grammarAccess.getJSONPropertyRule()); }
	 ruleJSONProperty
{ after(grammarAccess.getJSONPropertyRule()); } 
	 EOF 
;

// Rule JSONProperty
ruleJSONProperty 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getJSONPropertyAccess().getGroup()); }
		(rule__JSONProperty__Group__0)
		{ after(grammarAccess.getJSONPropertyAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleType
entryRuleType
:
{ before(grammarAccess.getTypeRule()); }
	 ruleType
{ after(grammarAccess.getTypeRule()); } 
	 EOF 
;

// Rule Type
ruleType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypeAccess().getGroup()); }
		(rule__Type__Group__0)
		{ after(grammarAccess.getTypeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleJsonTypes
entryRuleJsonTypes
:
{ before(grammarAccess.getJsonTypesRule()); }
	 ruleJsonTypes
{ after(grammarAccess.getJsonTypesRule()); } 
	 EOF 
;

// Rule JsonTypes
ruleJsonTypes 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getJsonTypesAccess().getAlternatives()); }
		(rule__JsonTypes__Alternatives)
		{ after(grammarAccess.getJsonTypesAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMultiples
entryRuleMultiples
:
{ before(grammarAccess.getMultiplesRule()); }
	 ruleMultiples
{ after(grammarAccess.getMultiplesRule()); } 
	 EOF 
;

// Rule Multiples
ruleMultiples 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMultiplesAccess().getGroup()); }
		(rule__Multiples__Group__0)
		{ after(grammarAccess.getMultiplesAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMinimum
entryRuleMinimum
:
{ before(grammarAccess.getMinimumRule()); }
	 ruleMinimum
{ after(grammarAccess.getMinimumRule()); } 
	 EOF 
;

// Rule Minimum
ruleMinimum 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMinimumAccess().getGroup()); }
		(rule__Minimum__Group__0)
		{ after(grammarAccess.getMinimumAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExclusiveMinimum
entryRuleExclusiveMinimum
:
{ before(grammarAccess.getExclusiveMinimumRule()); }
	 ruleExclusiveMinimum
{ after(grammarAccess.getExclusiveMinimumRule()); } 
	 EOF 
;

// Rule ExclusiveMinimum
ruleExclusiveMinimum 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExclusiveMinimumAccess().getGroup()); }
		(rule__ExclusiveMinimum__Group__0)
		{ after(grammarAccess.getExclusiveMinimumAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMaximum
entryRuleMaximum
:
{ before(grammarAccess.getMaximumRule()); }
	 ruleMaximum
{ after(grammarAccess.getMaximumRule()); } 
	 EOF 
;

// Rule Maximum
ruleMaximum 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMaximumAccess().getGroup()); }
		(rule__Maximum__Group__0)
		{ after(grammarAccess.getMaximumAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExclusiveMaximum
entryRuleExclusiveMaximum
:
{ before(grammarAccess.getExclusiveMaximumRule()); }
	 ruleExclusiveMaximum
{ after(grammarAccess.getExclusiveMaximumRule()); } 
	 EOF 
;

// Rule ExclusiveMaximum
ruleExclusiveMaximum 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExclusiveMaximumAccess().getGroup()); }
		(rule__ExclusiveMaximum__Group__0)
		{ after(grammarAccess.getExclusiveMaximumAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLength
entryRuleLength
:
{ before(grammarAccess.getLengthRule()); }
	 ruleLength
{ after(grammarAccess.getLengthRule()); } 
	 EOF 
;

// Rule Length
ruleLength 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLengthAccess().getGroup()); }
		(rule__Length__Group__0)
		{ after(grammarAccess.getLengthAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Root__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRootAccess().getGroup_0()); }
		(rule__Root__Group_0__0)
		{ after(grammarAccess.getRootAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getRootAccess().getGroup_1()); }
		(rule__Root__Group_1__0)
		{ after(grammarAccess.getRootAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getRootAccess().getGroup_2()); }
		(rule__Root__Group_2__0)
		{ after(grammarAccess.getRootAccess().getGroup_2()); }
	)
	|
	(
		{ before(grammarAccess.getRootAccess().getGroup_3()); }
		(rule__Root__Group_3__0)
		{ after(grammarAccess.getRootAccess().getGroup_3()); }
	)
	|
	(
		{ before(grammarAccess.getRootAccess().getGroup_4()); }
		(rule__Root__Group_4__0)
		{ after(grammarAccess.getRootAccess().getGroup_4()); }
	)
	|
	(
		{ before(grammarAccess.getRootAccess().getGroup_5()); }
		(rule__Root__Group_5__0)
		{ after(grammarAccess.getRootAccess().getGroup_5()); }
	)
	|
	(
		{ before(grammarAccess.getRootAccess().getGroup_6()); }
		(rule__Root__Group_6__0)
		{ after(grammarAccess.getRootAccess().getGroup_6()); }
	)
	|
	(
		{ before(grammarAccess.getRootAccess().getJSONPropertiesParserRuleCall_7()); }
		ruleJSONProperties
		{ after(grammarAccess.getRootAccess().getJSONPropertiesParserRuleCall_7()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Alternatives_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeAccess().getGroup_2_0()); }
		(rule__Type__Group_2_0__0)
		{ after(grammarAccess.getTypeAccess().getGroup_2_0()); }
	)
	|
	(
		{ before(grammarAccess.getTypeAccess().getJsonTypesParserRuleCall_2_1()); }
		ruleJsonTypes
		{ after(grammarAccess.getTypeAccess().getJsonTypesParserRuleCall_2_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__JsonTypes__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getJsonTypesAccess().getStringKeyword_0()); }
		'"string"'
		{ after(grammarAccess.getJsonTypesAccess().getStringKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getJsonTypesAccess().getIntegerKeyword_1()); }
		'"integer"'
		{ after(grammarAccess.getJsonTypesAccess().getIntegerKeyword_1()); }
	)
	|
	(
		{ before(grammarAccess.getJsonTypesAccess().getNumberKeyword_2()); }
		'"number"'
		{ after(grammarAccess.getJsonTypesAccess().getNumberKeyword_2()); }
	)
	|
	(
		{ before(grammarAccess.getJsonTypesAccess().getObjectKeyword_3()); }
		'"object"'
		{ after(grammarAccess.getJsonTypesAccess().getObjectKeyword_3()); }
	)
	|
	(
		{ before(grammarAccess.getJsonTypesAccess().getArrayKeyword_4()); }
		'"array"'
		{ after(grammarAccess.getJsonTypesAccess().getArrayKeyword_4()); }
	)
	|
	(
		{ before(grammarAccess.getJsonTypesAccess().getBooleanKeyword_5()); }
		'"boolean"'
		{ after(grammarAccess.getJsonTypesAccess().getBooleanKeyword_5()); }
	)
	|
	(
		{ before(grammarAccess.getJsonTypesAccess().getNullKeyword_6()); }
		'"null"'
		{ after(grammarAccess.getJsonTypesAccess().getNullKeyword_6()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__0__Impl
	rule__Model__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getLeftCurlyBracketKeyword_0()); }
	'{'
	{ after(grammarAccess.getModelAccess().getLeftCurlyBracketKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__1__Impl
	rule__Model__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getGroup_1()); }
	(rule__Model__Group_1__0)*
	{ after(grammarAccess.getModelAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getRightCurlyBracketKeyword_2()); }
	'}'
	{ after(grammarAccess.getModelAccess().getRightCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Model__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group_1__0__Impl
	rule__Model__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getRootAssignment_1_0()); }
	(rule__Model__RootAssignment_1_0)
	{ after(grammarAccess.getModelAccess().getRootAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getCommaKeyword_1_1()); }
	(',')?
	{ after(grammarAccess.getModelAccess().getCommaKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Root__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Root__Group_0__0__Impl
	rule__Root__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Root__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRootAccess().getRootAction_0_0()); }
	()
	{ after(grammarAccess.getRootAccess().getRootAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Root__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Root__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Root__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRootAccess().getTypeParserRuleCall_0_1()); }
	ruleType
	{ after(grammarAccess.getRootAccess().getTypeParserRuleCall_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Root__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Root__Group_1__0__Impl
	rule__Root__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Root__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRootAccess().getRootAction_1_0()); }
	()
	{ after(grammarAccess.getRootAccess().getRootAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Root__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Root__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Root__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRootAccess().getLengthParserRuleCall_1_1()); }
	ruleLength
	{ after(grammarAccess.getRootAccess().getLengthParserRuleCall_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Root__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Root__Group_2__0__Impl
	rule__Root__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Root__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRootAccess().getRootAction_2_0()); }
	()
	{ after(grammarAccess.getRootAccess().getRootAction_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Root__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Root__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Root__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRootAccess().getMultiplesParserRuleCall_2_1()); }
	ruleMultiples
	{ after(grammarAccess.getRootAccess().getMultiplesParserRuleCall_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Root__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Root__Group_3__0__Impl
	rule__Root__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Root__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRootAccess().getRootAction_3_0()); }
	()
	{ after(grammarAccess.getRootAccess().getRootAction_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Root__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Root__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Root__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRootAccess().getMinimumParserRuleCall_3_1()); }
	ruleMinimum
	{ after(grammarAccess.getRootAccess().getMinimumParserRuleCall_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Root__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Root__Group_4__0__Impl
	rule__Root__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Root__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRootAccess().getRootAction_4_0()); }
	()
	{ after(grammarAccess.getRootAccess().getRootAction_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Root__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Root__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Root__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRootAccess().getExclusiveMinimumParserRuleCall_4_1()); }
	ruleExclusiveMinimum
	{ after(grammarAccess.getRootAccess().getExclusiveMinimumParserRuleCall_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Root__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Root__Group_5__0__Impl
	rule__Root__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Root__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRootAccess().getRootAction_5_0()); }
	()
	{ after(grammarAccess.getRootAccess().getRootAction_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Root__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Root__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Root__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRootAccess().getMaximumParserRuleCall_5_1()); }
	ruleMaximum
	{ after(grammarAccess.getRootAccess().getMaximumParserRuleCall_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Root__Group_6__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Root__Group_6__0__Impl
	rule__Root__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Root__Group_6__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRootAccess().getRootAction_6_0()); }
	()
	{ after(grammarAccess.getRootAccess().getRootAction_6_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Root__Group_6__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Root__Group_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Root__Group_6__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRootAccess().getExclusiveMaximumParserRuleCall_6_1()); }
	ruleExclusiveMaximum
	{ after(grammarAccess.getRootAccess().getExclusiveMaximumParserRuleCall_6_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__JSONProperties__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JSONProperties__Group__0__Impl
	rule__JSONProperties__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__JSONProperties__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJSONPropertiesAccess().getJSONPropertiesAction_0()); }
	()
	{ after(grammarAccess.getJSONPropertiesAccess().getJSONPropertiesAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__JSONProperties__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JSONProperties__Group__1__Impl
	rule__JSONProperties__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__JSONProperties__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJSONPropertiesAccess().getPropertiesKeyword_1()); }
	'"properties"'
	{ after(grammarAccess.getJSONPropertiesAccess().getPropertiesKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__JSONProperties__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JSONProperties__Group__2__Impl
	rule__JSONProperties__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__JSONProperties__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJSONPropertiesAccess().getColonKeyword_2()); }
	':'
	{ after(grammarAccess.getJSONPropertiesAccess().getColonKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__JSONProperties__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JSONProperties__Group__3__Impl
	rule__JSONProperties__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__JSONProperties__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJSONPropertiesAccess().getLeftCurlyBracketKeyword_3()); }
	'{'
	{ after(grammarAccess.getJSONPropertiesAccess().getLeftCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__JSONProperties__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JSONProperties__Group__4__Impl
	rule__JSONProperties__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__JSONProperties__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJSONPropertiesAccess().getPropertiesAssignment_4()); }
	(rule__JSONProperties__PropertiesAssignment_4)*
	{ after(grammarAccess.getJSONPropertiesAccess().getPropertiesAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__JSONProperties__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JSONProperties__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JSONProperties__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJSONPropertiesAccess().getRightCurlyBracketKeyword_5()); }
	'}'
	{ after(grammarAccess.getJSONPropertiesAccess().getRightCurlyBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__JSONProperty__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JSONProperty__Group__0__Impl
	rule__JSONProperty__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__JSONProperty__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJSONPropertyAccess().getNameAssignment_0()); }
	(rule__JSONProperty__NameAssignment_0)
	{ after(grammarAccess.getJSONPropertyAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__JSONProperty__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JSONProperty__Group__1__Impl
	rule__JSONProperty__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__JSONProperty__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJSONPropertyAccess().getColonKeyword_1()); }
	':'
	{ after(grammarAccess.getJSONPropertyAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__JSONProperty__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JSONProperty__Group__2__Impl
	rule__JSONProperty__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__JSONProperty__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJSONPropertyAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getJSONPropertyAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__JSONProperty__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JSONProperty__Group__3__Impl
	rule__JSONProperty__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__JSONProperty__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJSONPropertyAccess().getPropertyAssignment_3()); }
	(rule__JSONProperty__PropertyAssignment_3)
	{ after(grammarAccess.getJSONPropertyAccess().getPropertyAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__JSONProperty__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JSONProperty__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JSONProperty__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJSONPropertyAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getJSONPropertyAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Type__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Type__Group__0__Impl
	rule__Type__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeAccess().getTypeKeyword_0()); }
	'"type"'
	{ after(grammarAccess.getTypeAccess().getTypeKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Type__Group__1__Impl
	rule__Type__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeAccess().getColonKeyword_1()); }
	':'
	{ after(grammarAccess.getTypeAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Type__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeAccess().getAlternatives_2()); }
	(rule__Type__Alternatives_2)
	{ after(grammarAccess.getTypeAccess().getAlternatives_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Type__Group_2_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Type__Group_2_0__0__Impl
	rule__Type__Group_2_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_2_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeAccess().getLeftSquareBracketKeyword_2_0_0()); }
	'['
	{ after(grammarAccess.getTypeAccess().getLeftSquareBracketKeyword_2_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_2_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Type__Group_2_0__1__Impl
	rule__Type__Group_2_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_2_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getTypeAccess().getJsonTypesParserRuleCall_2_0_1()); }
		(ruleJsonTypes)
		{ after(grammarAccess.getTypeAccess().getJsonTypesParserRuleCall_2_0_1()); }
	)
	(
		{ before(grammarAccess.getTypeAccess().getJsonTypesParserRuleCall_2_0_1()); }
		(ruleJsonTypes)*
		{ after(grammarAccess.getTypeAccess().getJsonTypesParserRuleCall_2_0_1()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_2_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Type__Group_2_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_2_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeAccess().getRightSquareBracketKeyword_2_0_2()); }
	']'
	{ after(grammarAccess.getTypeAccess().getRightSquareBracketKeyword_2_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Multiples__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Multiples__Group__0__Impl
	rule__Multiples__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiples__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplesAccess().getMultiplesKeyword_0()); }
	'"multiples":'
	{ after(grammarAccess.getMultiplesAccess().getMultiplesKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiples__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Multiples__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiples__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplesAccess().getINTTerminalRuleCall_1()); }
	RULE_INT
	{ after(grammarAccess.getMultiplesAccess().getINTTerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Minimum__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Minimum__Group__0__Impl
	rule__Minimum__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Minimum__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMinimumAccess().getMinimumKeyword_0()); }
	'"minimum":'
	{ after(grammarAccess.getMinimumAccess().getMinimumKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Minimum__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Minimum__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Minimum__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMinimumAccess().getINTTerminalRuleCall_1()); }
	RULE_INT
	{ after(grammarAccess.getMinimumAccess().getINTTerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExclusiveMinimum__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExclusiveMinimum__Group__0__Impl
	rule__ExclusiveMinimum__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExclusiveMinimum__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExclusiveMinimumAccess().getExclusiveMinimumKeyword_0()); }
	'"exclusiveMinimum":'
	{ after(grammarAccess.getExclusiveMinimumAccess().getExclusiveMinimumKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExclusiveMinimum__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExclusiveMinimum__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExclusiveMinimum__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExclusiveMinimumAccess().getINTTerminalRuleCall_1()); }
	RULE_INT
	{ after(grammarAccess.getExclusiveMinimumAccess().getINTTerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Maximum__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Maximum__Group__0__Impl
	rule__Maximum__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Maximum__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMaximumAccess().getMaximumKeyword_0()); }
	'"maximum":'
	{ after(grammarAccess.getMaximumAccess().getMaximumKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Maximum__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Maximum__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Maximum__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMaximumAccess().getINTTerminalRuleCall_1()); }
	RULE_INT
	{ after(grammarAccess.getMaximumAccess().getINTTerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExclusiveMaximum__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExclusiveMaximum__Group__0__Impl
	rule__ExclusiveMaximum__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExclusiveMaximum__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExclusiveMaximumAccess().getExclusiveMaximumKeyword_0()); }
	'"exclusiveMaximum":'
	{ after(grammarAccess.getExclusiveMaximumAccess().getExclusiveMaximumKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExclusiveMaximum__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExclusiveMaximum__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExclusiveMaximum__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExclusiveMaximumAccess().getINTTerminalRuleCall_1()); }
	RULE_INT
	{ after(grammarAccess.getExclusiveMaximumAccess().getINTTerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Length__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Length__Group__0__Impl
	rule__Length__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Length__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLengthAccess().getLengthKeyword_0()); }
	'"length":'
	{ after(grammarAccess.getLengthAccess().getLengthKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Length__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Length__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Length__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLengthAccess().getINTTerminalRuleCall_1()); }
	RULE_INT
	{ after(grammarAccess.getLengthAccess().getINTTerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Model__RootAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getRootRootParserRuleCall_1_0_0()); }
		ruleRoot
		{ after(grammarAccess.getModelAccess().getRootRootParserRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__JSONProperties__PropertiesAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getJSONPropertiesAccess().getPropertiesJSONPropertyParserRuleCall_4_0()); }
		ruleJSONProperty
		{ after(grammarAccess.getJSONPropertiesAccess().getPropertiesJSONPropertyParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__JSONProperty__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getJSONPropertyAccess().getNameIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getJSONPropertyAccess().getNameIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__JSONProperty__PropertyAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getJSONPropertyAccess().getPropertyRootParserRuleCall_3_0()); }
		ruleRoot
		{ after(grammarAccess.getJSONPropertyAccess().getPropertyRootParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '"' ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')* '"';

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
