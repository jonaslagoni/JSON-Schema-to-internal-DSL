/**
 * generated by Xtext 2.20.0
 */
package org.xtext.json.schema.draft7;


/**
 * <!-- begin-user-doc -->
 * A representation of the model object '<em><b>Number Properties</b></em>'.
 * <!-- end-user-doc -->
 *
 * <p>
 * The following features are supported:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.json.schema.draft7.NumberProperties#getMinimum <em>Minimum</em>}</li>
 *   <li>{@link org.xtext.json.schema.draft7.NumberProperties#getExclusiveMinimum <em>Exclusive Minimum</em>}</li>
 *   <li>{@link org.xtext.json.schema.draft7.NumberProperties#getMaximum <em>Maximum</em>}</li>
 *   <li>{@link org.xtext.json.schema.draft7.NumberProperties#getExclusiveMaximum <em>Exclusive Maximum</em>}</li>
 * </ul>
 *
 * @see org.xtext.json.schema.draft7.Draft7Package#getNumberProperties()
 * @model
 * @generated
 */
public interface NumberProperties extends JsonSchemaRoot
{
  /**
   * Returns the value of the '<em><b>Minimum</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Minimum</em>' containment reference.
   * @see #setMinimum(Minimum)
   * @see org.xtext.json.schema.draft7.Draft7Package#getNumberProperties_Minimum()
   * @model containment="true"
   * @generated
   */
  Minimum getMinimum();

  /**
   * Sets the value of the '{@link org.xtext.json.schema.draft7.NumberProperties#getMinimum <em>Minimum</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Minimum</em>' containment reference.
   * @see #getMinimum()
   * @generated
   */
  void setMinimum(Minimum value);

  /**
   * Returns the value of the '<em><b>Exclusive Minimum</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Exclusive Minimum</em>' containment reference.
   * @see #setExclusiveMinimum(ExclusiveMinimum)
   * @see org.xtext.json.schema.draft7.Draft7Package#getNumberProperties_ExclusiveMinimum()
   * @model containment="true"
   * @generated
   */
  ExclusiveMinimum getExclusiveMinimum();

  /**
   * Sets the value of the '{@link org.xtext.json.schema.draft7.NumberProperties#getExclusiveMinimum <em>Exclusive Minimum</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Exclusive Minimum</em>' containment reference.
   * @see #getExclusiveMinimum()
   * @generated
   */
  void setExclusiveMinimum(ExclusiveMinimum value);

  /**
   * Returns the value of the '<em><b>Maximum</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Maximum</em>' containment reference.
   * @see #setMaximum(Maximum)
   * @see org.xtext.json.schema.draft7.Draft7Package#getNumberProperties_Maximum()
   * @model containment="true"
   * @generated
   */
  Maximum getMaximum();

  /**
   * Sets the value of the '{@link org.xtext.json.schema.draft7.NumberProperties#getMaximum <em>Maximum</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Maximum</em>' containment reference.
   * @see #getMaximum()
   * @generated
   */
  void setMaximum(Maximum value);

  /**
   * Returns the value of the '<em><b>Exclusive Maximum</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Exclusive Maximum</em>' containment reference.
   * @see #setExclusiveMaximum(ExclusiveMaximum)
   * @see org.xtext.json.schema.draft7.Draft7Package#getNumberProperties_ExclusiveMaximum()
   * @model containment="true"
   * @generated
   */
  ExclusiveMaximum getExclusiveMaximum();

  /**
   * Sets the value of the '{@link org.xtext.json.schema.draft7.NumberProperties#getExclusiveMaximum <em>Exclusive Maximum</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Exclusive Maximum</em>' containment reference.
   * @see #getExclusiveMaximum()
   * @generated
   */
  void setExclusiveMaximum(ExclusiveMaximum value);

} // NumberProperties
