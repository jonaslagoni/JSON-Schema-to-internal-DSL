/**
 * generated by Xtext 2.20.0
 */
package org.xtext.json.schema.draft7.impl;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EPackage;

import org.eclipse.emf.ecore.impl.EFactoryImpl;

import org.eclipse.emf.ecore.plugin.EcorePlugin;

import org.xtext.json.schema.draft7.*;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model <b>Factory</b>.
 * <!-- end-user-doc -->
 * @generated
 */
public class Draft7FactoryImpl extends EFactoryImpl implements Draft7Factory
{
  /**
   * Creates the default factory implementation.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static Draft7Factory init()
  {
    try
    {
      Draft7Factory theDraft7Factory = (Draft7Factory)EPackage.Registry.INSTANCE.getEFactory(Draft7Package.eNS_URI);
      if (theDraft7Factory != null)
      {
        return theDraft7Factory;
      }
    }
    catch (Exception exception)
    {
      EcorePlugin.INSTANCE.log(exception);
    }
    return new Draft7FactoryImpl();
  }

  /**
   * Creates an instance of the factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Draft7FactoryImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EObject create(EClass eClass)
  {
    switch (eClass.getClassifierID())
    {
      case Draft7Package.MODEL: return createModel();
      case Draft7Package.JSON_SCHEMA_ROOT: return createJsonSchemaRoot();
      case Draft7Package.NUMBER_PROPERTIES: return createNumberProperties();
      case Draft7Package.TYPE: return createType();
      case Draft7Package.OBJECT_PROPERTIES: return createObjectProperties();
      case Draft7Package.REQUIRED_PROPERTIES: return createRequiredProperties();
      case Draft7Package.REQUIRED_PROPERTIES_NAME: return createRequiredPropertiesName();
      case Draft7Package.PROPERTIES: return createProperties();
      case Draft7Package.PROPERTY: return createProperty();
      case Draft7Package.STRING_PROPERTIES: return createStringProperties();
      case Draft7Package.LENGTH: return createLength();
      case Draft7Package.PATTERN: return createPattern();
      case Draft7Package.MULTIPLES: return createMultiples();
      case Draft7Package.MINIMUM: return createMinimum();
      case Draft7Package.EXCLUSIVE_MINIMUM: return createExclusiveMinimum();
      case Draft7Package.MAXIMUM: return createMaximum();
      case Draft7Package.EXCLUSIVE_MAXIMUM: return createExclusiveMaximum();
      default:
        throw new IllegalArgumentException("The class '" + eClass.getName() + "' is not a valid classifier");
    }
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Model createModel()
  {
    ModelImpl model = new ModelImpl();
    return model;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public JsonSchemaRoot createJsonSchemaRoot()
  {
    JsonSchemaRootImpl jsonSchemaRoot = new JsonSchemaRootImpl();
    return jsonSchemaRoot;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NumberProperties createNumberProperties()
  {
    NumberPropertiesImpl numberProperties = new NumberPropertiesImpl();
    return numberProperties;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Type createType()
  {
    TypeImpl type = new TypeImpl();
    return type;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ObjectProperties createObjectProperties()
  {
    ObjectPropertiesImpl objectProperties = new ObjectPropertiesImpl();
    return objectProperties;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public RequiredProperties createRequiredProperties()
  {
    RequiredPropertiesImpl requiredProperties = new RequiredPropertiesImpl();
    return requiredProperties;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public RequiredPropertiesName createRequiredPropertiesName()
  {
    RequiredPropertiesNameImpl requiredPropertiesName = new RequiredPropertiesNameImpl();
    return requiredPropertiesName;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Properties createProperties()
  {
    PropertiesImpl properties = new PropertiesImpl();
    return properties;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Property createProperty()
  {
    PropertyImpl property = new PropertyImpl();
    return property;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public StringProperties createStringProperties()
  {
    StringPropertiesImpl stringProperties = new StringPropertiesImpl();
    return stringProperties;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Length createLength()
  {
    LengthImpl length = new LengthImpl();
    return length;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Pattern createPattern()
  {
    PatternImpl pattern = new PatternImpl();
    return pattern;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Multiples createMultiples()
  {
    MultiplesImpl multiples = new MultiplesImpl();
    return multiples;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Minimum createMinimum()
  {
    MinimumImpl minimum = new MinimumImpl();
    return minimum;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ExclusiveMinimum createExclusiveMinimum()
  {
    ExclusiveMinimumImpl exclusiveMinimum = new ExclusiveMinimumImpl();
    return exclusiveMinimum;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Maximum createMaximum()
  {
    MaximumImpl maximum = new MaximumImpl();
    return maximum;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ExclusiveMaximum createExclusiveMaximum()
  {
    ExclusiveMaximumImpl exclusiveMaximum = new ExclusiveMaximumImpl();
    return exclusiveMaximum;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Draft7Package getDraft7Package()
  {
    return (Draft7Package)getEPackage();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @deprecated
   * @generated
   */
  @Deprecated
  public static Draft7Package getPackage()
  {
    return Draft7Package.eINSTANCE;
  }

} //Draft7FactoryImpl
