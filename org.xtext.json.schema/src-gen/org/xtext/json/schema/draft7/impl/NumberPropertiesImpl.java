/**
 * generated by Xtext 2.20.0
 */
package org.xtext.json.schema.draft7.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.xtext.json.schema.draft7.Draft7Package;
import org.xtext.json.schema.draft7.ExclusiveMaximum;
import org.xtext.json.schema.draft7.ExclusiveMinimum;
import org.xtext.json.schema.draft7.Maximum;
import org.xtext.json.schema.draft7.Minimum;
import org.xtext.json.schema.draft7.NumberProperties;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Number Properties</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.json.schema.draft7.impl.NumberPropertiesImpl#getMinimum <em>Minimum</em>}</li>
 *   <li>{@link org.xtext.json.schema.draft7.impl.NumberPropertiesImpl#getExclusiveMinimum <em>Exclusive Minimum</em>}</li>
 *   <li>{@link org.xtext.json.schema.draft7.impl.NumberPropertiesImpl#getMaximum <em>Maximum</em>}</li>
 *   <li>{@link org.xtext.json.schema.draft7.impl.NumberPropertiesImpl#getExclusiveMaximum <em>Exclusive Maximum</em>}</li>
 * </ul>
 *
 * @generated
 */
public class NumberPropertiesImpl extends JsonSchemaRootImpl implements NumberProperties
{
  /**
   * The cached value of the '{@link #getMinimum() <em>Minimum</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMinimum()
   * @generated
   * @ordered
   */
  protected Minimum minimum;

  /**
   * The cached value of the '{@link #getExclusiveMinimum() <em>Exclusive Minimum</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getExclusiveMinimum()
   * @generated
   * @ordered
   */
  protected ExclusiveMinimum exclusiveMinimum;

  /**
   * The cached value of the '{@link #getMaximum() <em>Maximum</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMaximum()
   * @generated
   * @ordered
   */
  protected Maximum maximum;

  /**
   * The cached value of the '{@link #getExclusiveMaximum() <em>Exclusive Maximum</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getExclusiveMaximum()
   * @generated
   * @ordered
   */
  protected ExclusiveMaximum exclusiveMaximum;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected NumberPropertiesImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return Draft7Package.Literals.NUMBER_PROPERTIES;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Minimum getMinimum()
  {
    return minimum;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetMinimum(Minimum newMinimum, NotificationChain msgs)
  {
    Minimum oldMinimum = minimum;
    minimum = newMinimum;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, Draft7Package.NUMBER_PROPERTIES__MINIMUM, oldMinimum, newMinimum);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setMinimum(Minimum newMinimum)
  {
    if (newMinimum != minimum)
    {
      NotificationChain msgs = null;
      if (minimum != null)
        msgs = ((InternalEObject)minimum).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - Draft7Package.NUMBER_PROPERTIES__MINIMUM, null, msgs);
      if (newMinimum != null)
        msgs = ((InternalEObject)newMinimum).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - Draft7Package.NUMBER_PROPERTIES__MINIMUM, null, msgs);
      msgs = basicSetMinimum(newMinimum, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, Draft7Package.NUMBER_PROPERTIES__MINIMUM, newMinimum, newMinimum));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ExclusiveMinimum getExclusiveMinimum()
  {
    return exclusiveMinimum;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetExclusiveMinimum(ExclusiveMinimum newExclusiveMinimum, NotificationChain msgs)
  {
    ExclusiveMinimum oldExclusiveMinimum = exclusiveMinimum;
    exclusiveMinimum = newExclusiveMinimum;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, Draft7Package.NUMBER_PROPERTIES__EXCLUSIVE_MINIMUM, oldExclusiveMinimum, newExclusiveMinimum);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setExclusiveMinimum(ExclusiveMinimum newExclusiveMinimum)
  {
    if (newExclusiveMinimum != exclusiveMinimum)
    {
      NotificationChain msgs = null;
      if (exclusiveMinimum != null)
        msgs = ((InternalEObject)exclusiveMinimum).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - Draft7Package.NUMBER_PROPERTIES__EXCLUSIVE_MINIMUM, null, msgs);
      if (newExclusiveMinimum != null)
        msgs = ((InternalEObject)newExclusiveMinimum).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - Draft7Package.NUMBER_PROPERTIES__EXCLUSIVE_MINIMUM, null, msgs);
      msgs = basicSetExclusiveMinimum(newExclusiveMinimum, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, Draft7Package.NUMBER_PROPERTIES__EXCLUSIVE_MINIMUM, newExclusiveMinimum, newExclusiveMinimum));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Maximum getMaximum()
  {
    return maximum;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetMaximum(Maximum newMaximum, NotificationChain msgs)
  {
    Maximum oldMaximum = maximum;
    maximum = newMaximum;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, Draft7Package.NUMBER_PROPERTIES__MAXIMUM, oldMaximum, newMaximum);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setMaximum(Maximum newMaximum)
  {
    if (newMaximum != maximum)
    {
      NotificationChain msgs = null;
      if (maximum != null)
        msgs = ((InternalEObject)maximum).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - Draft7Package.NUMBER_PROPERTIES__MAXIMUM, null, msgs);
      if (newMaximum != null)
        msgs = ((InternalEObject)newMaximum).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - Draft7Package.NUMBER_PROPERTIES__MAXIMUM, null, msgs);
      msgs = basicSetMaximum(newMaximum, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, Draft7Package.NUMBER_PROPERTIES__MAXIMUM, newMaximum, newMaximum));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ExclusiveMaximum getExclusiveMaximum()
  {
    return exclusiveMaximum;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetExclusiveMaximum(ExclusiveMaximum newExclusiveMaximum, NotificationChain msgs)
  {
    ExclusiveMaximum oldExclusiveMaximum = exclusiveMaximum;
    exclusiveMaximum = newExclusiveMaximum;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, Draft7Package.NUMBER_PROPERTIES__EXCLUSIVE_MAXIMUM, oldExclusiveMaximum, newExclusiveMaximum);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setExclusiveMaximum(ExclusiveMaximum newExclusiveMaximum)
  {
    if (newExclusiveMaximum != exclusiveMaximum)
    {
      NotificationChain msgs = null;
      if (exclusiveMaximum != null)
        msgs = ((InternalEObject)exclusiveMaximum).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - Draft7Package.NUMBER_PROPERTIES__EXCLUSIVE_MAXIMUM, null, msgs);
      if (newExclusiveMaximum != null)
        msgs = ((InternalEObject)newExclusiveMaximum).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - Draft7Package.NUMBER_PROPERTIES__EXCLUSIVE_MAXIMUM, null, msgs);
      msgs = basicSetExclusiveMaximum(newExclusiveMaximum, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, Draft7Package.NUMBER_PROPERTIES__EXCLUSIVE_MAXIMUM, newExclusiveMaximum, newExclusiveMaximum));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case Draft7Package.NUMBER_PROPERTIES__MINIMUM:
        return basicSetMinimum(null, msgs);
      case Draft7Package.NUMBER_PROPERTIES__EXCLUSIVE_MINIMUM:
        return basicSetExclusiveMinimum(null, msgs);
      case Draft7Package.NUMBER_PROPERTIES__MAXIMUM:
        return basicSetMaximum(null, msgs);
      case Draft7Package.NUMBER_PROPERTIES__EXCLUSIVE_MAXIMUM:
        return basicSetExclusiveMaximum(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case Draft7Package.NUMBER_PROPERTIES__MINIMUM:
        return getMinimum();
      case Draft7Package.NUMBER_PROPERTIES__EXCLUSIVE_MINIMUM:
        return getExclusiveMinimum();
      case Draft7Package.NUMBER_PROPERTIES__MAXIMUM:
        return getMaximum();
      case Draft7Package.NUMBER_PROPERTIES__EXCLUSIVE_MAXIMUM:
        return getExclusiveMaximum();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case Draft7Package.NUMBER_PROPERTIES__MINIMUM:
        setMinimum((Minimum)newValue);
        return;
      case Draft7Package.NUMBER_PROPERTIES__EXCLUSIVE_MINIMUM:
        setExclusiveMinimum((ExclusiveMinimum)newValue);
        return;
      case Draft7Package.NUMBER_PROPERTIES__MAXIMUM:
        setMaximum((Maximum)newValue);
        return;
      case Draft7Package.NUMBER_PROPERTIES__EXCLUSIVE_MAXIMUM:
        setExclusiveMaximum((ExclusiveMaximum)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case Draft7Package.NUMBER_PROPERTIES__MINIMUM:
        setMinimum((Minimum)null);
        return;
      case Draft7Package.NUMBER_PROPERTIES__EXCLUSIVE_MINIMUM:
        setExclusiveMinimum((ExclusiveMinimum)null);
        return;
      case Draft7Package.NUMBER_PROPERTIES__MAXIMUM:
        setMaximum((Maximum)null);
        return;
      case Draft7Package.NUMBER_PROPERTIES__EXCLUSIVE_MAXIMUM:
        setExclusiveMaximum((ExclusiveMaximum)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case Draft7Package.NUMBER_PROPERTIES__MINIMUM:
        return minimum != null;
      case Draft7Package.NUMBER_PROPERTIES__EXCLUSIVE_MINIMUM:
        return exclusiveMinimum != null;
      case Draft7Package.NUMBER_PROPERTIES__MAXIMUM:
        return maximum != null;
      case Draft7Package.NUMBER_PROPERTIES__EXCLUSIVE_MAXIMUM:
        return exclusiveMaximum != null;
    }
    return super.eIsSet(featureID);
  }

} //NumberPropertiesImpl
